{"ast":null,"code":"var _jsxFileName = \"E:\\\\Helpdesk\\\\HelpDesk\\\\helpdesk-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Tickets from './pages/Tickets';\nimport NotFound from './pages/NotFound';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport PublicPanel from './pages/PublicPanel';\nimport Dashboard from './components/Dashboard';\nimport './styles/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLogged, setIsLogged] = useState(false);\n  const [ticketsRefresh, setTicketsRefresh] = useState(0);\n  const handleLogin = () => {\n    setIsLogged(true);\n  };\n  const handleLogout = async () => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/logout.php`, {\n        credentials: 'include'\n      });\n      if (!res.ok) {\n        alert('Erro ao fazer logout. Tente novamente.');\n        return;\n      }\n      setIsLogged(false);\n    } catch (e) {\n      alert('Erro de conexão com o servidor. Verifique se o backend está rodando.');\n    }\n  };\n\n  // Função para ser passada para TicketForm, Dashboard, etc\n  const handleTicketsChange = () => {\n    setTicketsRefresh(r => r + 1);\n  };\n  if (!isLogged) {\n    // Usuário comum: painel público\n    return /*#__PURE__*/_jsxDEV(PublicPanel, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Técnico/admin: painel completo\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/tickets\",\n            render: () => /*#__PURE__*/_jsxDEV(Tickets, {\n              refresh: ticketsRefresh,\n              onTicketChange: handleTicketsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            render: () => /*#__PURE__*/_jsxDEV(Dashboard, {\n              refresh: ticketsRefresh,\n              onTicketChange: handleTicketsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: NotFound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zsC3Jyq1MvO26fyBBhdFviUWIZ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Home","Tickets","NotFound","Header","Sidebar","PublicPanel","Dashboard","jsxDEV","_jsxDEV","App","_s","isLogged","setIsLogged","ticketsRefresh","setTicketsRefresh","handleLogin","handleLogout","res","fetch","process","env","REACT_APP_API_URL","credentials","ok","alert","e","handleTicketsChange","r","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onLogout","path","exact","component","render","refresh","onTicketChange","_c","$RefreshReg$"],"sources":["E:/Helpdesk/HelpDesk/helpdesk-frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Tickets from './pages/Tickets';\nimport NotFound from './pages/NotFound';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport LoginForm from './components/LoginForm';\nimport PublicPanel from './pages/PublicPanel';\nimport Dashboard from './components/Dashboard';\nimport './styles/global.css';\n\nconst App: React.FC = () => {\n  const [isLogged, setIsLogged] = useState(false);\n  const [ticketsRefresh, setTicketsRefresh] = useState(0);\n\n  const handleLogin = () => {\n    setIsLogged(true);\n  };\n\n  const handleLogout = async () => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/logout.php`, { credentials: 'include' });\n      if (!res.ok) {\n        alert('Erro ao fazer logout. Tente novamente.');\n        return;\n      }\n      setIsLogged(false);\n    } catch (e) {\n      alert('Erro de conexão com o servidor. Verifique se o backend está rodando.');\n    }\n  };\n\n  // Função para ser passada para TicketForm, Dashboard, etc\n  const handleTicketsChange = () => {\n    setTicketsRefresh(r => r + 1);\n  };\n\n  if (!isLogged) {\n    // Usuário comum: painel público\n    return <PublicPanel onLogin={handleLogin} />;\n  }\n\n  // Técnico/admin: painel completo\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Header onLogout={handleLogout} />\n        <div className=\"main-content\">\n          <Sidebar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/tickets\" render={() => <Tickets refresh={ticketsRefresh} onTicketChange={handleTicketsChange} />} />\n            <Route path=\"/dashboard\" render={() => <Dashboard refresh={ticketsRefresh} onTicketChange={handleTicketsChange} />} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}