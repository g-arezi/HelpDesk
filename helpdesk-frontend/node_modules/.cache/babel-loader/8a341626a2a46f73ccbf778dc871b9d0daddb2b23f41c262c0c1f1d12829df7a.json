{"ast":null,"code":"var _jsxFileName = \"E:\\\\Helpdesk\\\\HelpDesk\\\\helpdesk-frontend\\\\src\\\\components\\\\TicketList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './TicketList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusOptions = [{\n  value: 'nao_aberto',\n  label: 'Não aberto'\n}, {\n  value: 'em_analise',\n  label: 'Em análise'\n}, {\n  value: 'resolvido',\n  label: 'Resolvido'\n}];\nconst TicketList = ({\n  onSelect,\n  onStatusChange\n}) => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [updating, setUpdating] = useState(null);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/tickets_api.php`, {\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      const mapped = (data || []).map((t, idx) => ({\n        id: idx + 1,\n        title: t.subject || t.title || 'Sem título',\n        status: t.status || 'Desconhecido',\n        name: t.name,\n        email: t.email,\n        subject: t.subject,\n        message: t.message,\n        telefone: t.telefone\n      }));\n      setTickets(mapped);\n    });\n  }, [updating]);\n  const handleStatusChange = async (ticket, newStatus) => {\n    setUpdating(ticket.id);\n    await fetch(`${process.env.REACT_APP_API_URL}/tickets_api.php`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        id: ticket.id - 1,\n        status: newStatus\n      })\n    });\n    setUpdating(null);\n    if (onStatusChange) onStatusChange();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Support Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `ticket-item ${ticket.status.toLowerCase()}`,\n        onClick: () => onSelect(ticket),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: ticket.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", ticket.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: ticket.status,\n          onChange: e => handleStatusChange(ticket, e.target.value),\n          disabled: updating === ticket.id,\n          children: statusOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt.value,\n            children: opt.label\n          }, opt.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 28\n          }, this), \" \", ticket.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 28\n          }, this), \" \", ticket.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, ticket.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(TicketList, \"RWdRQ7b9LlgPq0c1ycp4fv7EoH8=\");\n_c = TicketList;\nexport default TicketList;\nvar _c;\n$RefreshReg$(_c, \"TicketList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","statusOptions","value","label","TicketList","onSelect","onStatusChange","_s","tickets","setTickets","updating","setUpdating","fetch","process","env","REACT_APP_API_URL","credentials","then","res","json","data","mapped","map","t","idx","id","title","subject","status","name","email","message","telefone","handleStatusChange","ticket","newStatus","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","onClick","style","cursor","onChange","e","target","disabled","opt","_c","$RefreshReg$"],"sources":["E:/Helpdesk/HelpDesk/helpdesk-frontend/src/components/TicketList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './TicketList.css';\n\nexport interface Ticket {\n    id: number;\n    title: string;\n    status: string;\n    name?: string;\n    email?: string;\n    subject?: string;\n    message?: string;\n    telefone?: string;\n}\n\ninterface TicketListProps {\n    onSelect: (ticket: Ticket) => void;\n    onStatusChange?: () => void;\n}\n\nconst statusOptions = [\n    { value: 'nao_aberto', label: 'Não aberto' },\n    { value: 'em_analise', label: 'Em análise' },\n    { value: 'resolvido', label: 'Resolvido' },\n];\n\nconst TicketList: React.FC<TicketListProps> = ({ onSelect, onStatusChange }) => {\n    const [tickets, setTickets] = useState<Ticket[]>([]);\n    const [updating, setUpdating] = useState<number | null>(null);\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_URL}/tickets_api.php`, { credentials: 'include' })\n            .then(res => res.json())\n            .then(data => {\n                const mapped = (data || []).map((t: any, idx: number) => ({\n                    id: idx + 1,\n                    title: t.subject || t.title || 'Sem título',\n                    status: t.status || 'Desconhecido',\n                    name: t.name,\n                    email: t.email,\n                    subject: t.subject,\n                    message: t.message,\n                    telefone: t.telefone,\n                }));\n                setTickets(mapped);\n            });\n    }, [updating]);\n\n    const handleStatusChange = async (ticket: Ticket, newStatus: string) => {\n        setUpdating(ticket.id);\n        await fetch(`${process.env.REACT_APP_API_URL}/tickets_api.php`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({ id: ticket.id - 1, status: newStatus })\n        });\n        setUpdating(null);\n        if (onStatusChange) onStatusChange();\n    };\n\n    return (\n        <div className=\"ticket-list\">\n            <h2>Support Tickets</h2>\n            <ul>\n                {tickets.map(ticket => (\n                    <li\n                        key={ticket.id}\n                        className={`ticket-item ${ticket.status.toLowerCase()}`}\n                        onClick={() => onSelect(ticket)}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        <h3>{ticket.title}</h3>\n                        <p>Status: {ticket.status}</p>\n                        <select\n                            value={ticket.status}\n                            onChange={e => handleStatusChange(ticket, e.target.value)}\n                            disabled={updating === ticket.id}\n                        >\n                            {statusOptions.map(opt => (\n                                <option key={opt.value} value={opt.value}>{opt.label}</option>\n                            ))}\n                        </select>\n                        <p><strong>Nome:</strong> {ticket.name}</p>\n                        <p><strong>Email:</strong> {ticket.email}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TicketList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}